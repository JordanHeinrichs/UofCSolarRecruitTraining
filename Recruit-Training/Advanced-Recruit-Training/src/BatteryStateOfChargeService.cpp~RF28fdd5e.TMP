#include "BatteryStateOfChargeService.h"

namespace
{
    const double BATTERY_AMP_HOUR_CAPACITY = 123.0;
}

BatteryStateOfChargeService::BatteryStateOfChargeService(double initialStateOfChargePercent)
: initialStateOfChargePercent_(initialStateOfChargePercent)
{
    currentAmpHourUsed = (initialStateOfChargePercent/100) * BATTERY_AMP_HOUR_CAPACITY;
}

BatteryStateOfChargeService::~BatteryStateOfChargeService()
{
}

double BatteryStateOfChargeService::totalAmpHoursUsed() const
{
    return currentAmpHourUsed;
}

bool BatteryStateOfChargeService::isCharging() const
{
    if (current < 0)
        return true;
    else
        return false;

}

QTime BatteryStateOfChargeService::timeWhenChargedOrDepleted() const
{
    return BATTERY_AMP_HOUR_CAPACITY - currentAmpHourUsed;
}


void BatteryStateOfChargeService::addData(const BatteryData& batteryData)
{
    //Q_UNUSED(batteryData);
    // This is where you can update your variables
    // Hint: There are many different ways that the totalAmpHoursUsed can be updated
    // i.e: Taking a running average of your data values, using most recent data points, etc.

    last_current = current;
    last_voltage = voltage;
    last_time = time;

    current = batteryData.current;
    voltage = batteryData.voltage;
    time = batteryData.time;

    currentAmpHourUsed = currentAmpHourUsed + ((current + last_current) * (time.hour() - last_time.hour()));

}
